{"ast":null,"code":"var _jsxFileName = \"/Users/ivana/Desktop/online_projects/covid-19/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Columned from 'react-columned';\n\nfunction SummaryCard(props) {\n  return /*#__PURE__*/React.createElement(Card, {\n    bg: \"secondary\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Cases\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, latest.cases)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Last updated \", lastUpdated)));\n}\n\nfunction App() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setsearchCountries] = useState(\"\");\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.includes(searchCountries) : item;\n  });\n  const countries = filterCountries.map((data, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      bg: \"light\",\n      text: \"dark\",\n      className: \"text-center\",\n      style: {\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: data.countryInfo.flag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, data.country), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Cases \", data.cases), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Recovered \", data.recovered), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Active \", data.active), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Critical \", data.critical), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Tests \", data.tests), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Today's cases \", data.todayCases), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Today's deaths \", data.todayDeaths), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Population \", data.population)));\n  });\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }];\n  useEffect(() => {\n    axios.all([axios.get(\"https://corona.lmao.ninja/v2/all\"), axios.get(\"https://corona.lmao.ninja/v2/countries\")]).then(responseArr => {\n      setLatest(responseArr[0].data);\n      setResults(responseArr[1].data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"secondary\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Cases\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, latest.cases)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Last updated \", lastUpdated))), /*#__PURE__*/React.createElement(Card, {\n    bg: \"danger\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Deaths\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, latest.deaths)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Last updated \", lastUpdated))), /*#__PURE__*/React.createElement(Card, {\n    bg: \"success\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Recovered\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, latest.recovered)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Last updated \", lastUpdated)))), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGroupSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Search Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Country name\",\n    onChange: e => setsearchCountries(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Columned, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \" \", countries));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivana/Desktop/online_projects/covid-19/src/App.js"],"names":["React","useEffect","useState","Card","CardDeck","axios","Form","Columned","SummaryCard","props","margin","latest","cases","lastUpdated","App","setLatest","results","setResults","searchCountries","setsearchCountries","filterCountries","filter","item","country","includes","countries","map","data","i","countryInfo","flag","recovered","active","critical","tests","todayCases","todayDeaths","population","queries","columns","query","all","get","then","responseArr","catch","err","console","log","date","Date","parseInt","updated","toString","deaths","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,SAAS,EAAC,aAA5C;AAA0D,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,KADV,CAFF,CADF,eAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqBC,WAArB,CADF,CAPF,CADF;AAaD;;AAED,SAASC,GAAT,GAAe;AACb,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMkB,eAAe,GAAGJ,OAAO,CAACK,MAAR,CAAeC,IAAI,IAAI;AAC7C,WAAOJ,eAAe,KAAK,EAApB,GAAyBI,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBN,eAAtB,CAAzB,GAAkEI,IAAzE;AACD,GAFuB,CAAxB;AAGA,QAAMG,SAAS,GAAGL,eAAe,CAACM,GAAhB,CAAoB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACjD,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,aAJZ;AAKE,MAAA,KAAK,EAAE;AAAElB,QAAAA,MAAM,EAAE;AAAV,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAEiB,IAAI,CAACE,WAAL,CAAiBC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaH,IAAI,CAACJ,OAAlB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkBI,IAAI,CAACf,KAAvB,CAFF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAsBe,IAAI,CAACI,SAA3B,CAJF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmBJ,IAAI,CAACK,MAAxB,CALF,eAME,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqBL,IAAI,CAACM,QAA1B,CANF,eAOE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkBN,IAAI,CAACO,KAAvB,CAPF,eAQE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA0BP,IAAI,CAACQ,UAA/B,CARF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2BR,IAAI,CAACS,WAAhC,CATF,eAUE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuBT,IAAI,CAACU,UAA5B,CAVF,CATF,CADF;AAwBD,GAzBiB,CAAlB;AA2BA,MAAIC,OAAO,GAAG,CAAC;AACbC,IAAAA,OAAO,EAAE,CADI;AAEbC,IAAAA,KAAK,EAAE;AAFM,GAAD,EAGX;AACDD,IAAAA,OAAO,EAAE,CADR;AAEDC,IAAAA,KAAK,EAAE;AAFN,GAHW,CAAd;AAQAvC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACFoC,GADH,CACO,CACHpC,KAAK,CAACqC,GAAN,CAAU,kCAAV,CADG,EAEHrC,KAAK,CAACqC,GAAN,CAAU,wCAAV,CAFG,CADP,EAOGC,IAPH,CAOQC,WAAW,IAAI;AACnB7B,MAAAA,SAAS,CAAC6B,WAAW,CAAC,CAAD,CAAX,CAAejB,IAAhB,CAAT;AACAV,MAAAA,UAAU,CAAC2B,WAAW,CAAC,CAAD,CAAX,CAAejB,IAAhB,CAAV;AACD,KAVH,EAWGkB,KAXH,CAWSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,QAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACxC,MAAM,CAACyC,OAAR,CAAjB,CAAb;AACA,QAAMvC,WAAW,GAAGoC,IAAI,CAACI,QAAL,EAApB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,IAAI,EAAC,OAA1B;AAAkC,IAAA,SAAS,EAAC,aAA5C;AAA0D,IAAA,KAAK,EAAE;AAAE3C,MAAAA,MAAM,EAAE;AAAV,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,KADV,CAFF,CADF,eAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqBC,WAArB,CADF,CAPF,CADF,eAYE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,SAAS,EAAC,aAAzC;AAAuD,IAAA,KAAK,EAAE;AAAEH,MAAAA,MAAM,EAAE;AAAV,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAAC2C,MADV,CAFF,CADF,eAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqBzC,WAArB,CADF,CAPF,CAZF,eAuBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,aAA1C;AAAwD,IAAA,KAAK,EAAE;AAAEH,MAAAA,MAAM,EAAE;AAAV,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACoB,SADV,CAFF,CADF,eAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqBlB,WAArB,CADF,CAPF,CAvBF,CADF,eAoCE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AACE,IAAA,WAAW,EAAC,oBADd;AAEE,IAAA,QAAQ,EAAE0C,CAAC,IAAIpC,kBAAkB,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CApCF,eA6CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAahC,SAAb,CA7CF,CADF;AAkDD;;AAED,eAAeX,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nimport Form from 'react-bootstrap/Form'\nimport Columned from 'react-columned';\n\n\nfunction SummaryCard(props) {\n  return (\n    <Card bg=\"secondary\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n      <Card.Body>\n        <Card.Title>Cases</Card.Title>\n        <Card.Text>\n          {latest.cases}\n        </Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <small>Last updated {lastUpdated}</small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nfunction App() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setsearchCountries] = useState(\"\");\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.includes(searchCountries) : item;\n  })\n  const countries = filterCountries.map((data, i) => {\n    return (\n      <Card\n        key={i}\n        bg=\"light\"\n        text=\"dark\"\n        className=\"text-center\"\n        style={{ margin: \"10px\" }}\n      >\n\n        <Card.Img variant=\"top\" src={data.countryInfo.flag} />\n        <Card.Body>\n          <Card.Title>{data.country}</Card.Title>\n          <Card.Text>Cases {data.cases}</Card.Text>\n\n          <Card.Text>Recovered {data.recovered}</Card.Text>\n          <Card.Text>Active {data.active}</Card.Text>\n          <Card.Text>Critical {data.critical}</Card.Text>\n          <Card.Text>Tests {data.tests}</Card.Text>\n          <Card.Text>Today's cases {data.todayCases}</Card.Text>\n          <Card.Text>Today's deaths {data.todayDeaths}</Card.Text>\n          <Card.Text>Population {data.population}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  });\n\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }];\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://corona.lmao.ninja/v2/all\"),\n        axios.get(\"https://corona.lmao.ninja/v2/countries\")\n\n      ])\n\n      .then(responseArr => {\n        setLatest(responseArr[0].data);\n        setResults(responseArr[1].data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  return (\n    <div>\n      <CardDeck>\n        <Card bg=\"secondary\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title>Cases</Card.Title>\n            <Card.Text>\n              {latest.cases}\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n        <Card bg=\"danger\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title>Deaths</Card.Title>\n            <Card.Text>\n              {latest.deaths}\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n        <Card bg=\"success\" text=\"white\" className=\"text-center\" style={{ margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title>Recovered</Card.Title>\n            <Card.Text>\n              {latest.recovered}\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <small>Last updated {lastUpdated}</small>\n          </Card.Footer>\n        </Card>\n      </CardDeck>\n      <Form>\n        <Form.Group controlId=\"formGroupSearch\">\n          <Form.Label>Search Country</Form.Label>\n          <Form.Control type=\"text\"\n            placeholder=\"Enter Country name\"\n            onChange={e => setsearchCountries(e.target.value)} />\n        </Form.Group>\n\n      </Form>\n      <Columned > {countries}</Columned>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}