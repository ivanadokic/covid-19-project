{"ast":null,"code":"var _jsxFileName = \"/Users/ivana/Desktop/online_projects/covid-19/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Columned from 'react-columned';\nimport NavBar from './components/NavBar';\nimport SummaryCard from './components/SummaryCard';\nimport CountryList from './components/CountryList';\n\nfunction App() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setsearchCountries] = useState(\"\");\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item;\n  });\n  useEffect(() => {\n    axios.all([axios.get(\"https://corona.lmao.ninja/v2/all\"), axios.get(\"https://corona.lmao.ninja/v2/countries\")]).then(responseArr => {\n      setLatest(responseArr[0].data);\n      setResults(responseArr[1].data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    component: SummaryCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivana/Desktop/online_projects/covid-19/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Link","Switch","Card","CardDeck","axios","Form","Columned","NavBar","SummaryCard","CountryList","App","latest","setLatest","results","setResults","searchCountries","setsearchCountries","filterCountries","filter","item","country","toLowerCase","includes","all","get","then","responseArr","data","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAGA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMqB,eAAe,GAAGJ,OAAO,CAACK,MAAR,CAAeC,IAAI,IAAI;AAC7C,WAAOJ,eAAe,KAAK,EAApB,GAAyBI,IAAI,CAACC,OAAL,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCP,eAAe,CAACM,WAAhB,EAApC,CAAzB,GAA8FF,IAArG;AACD,GAFuB,CAAxB;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CACFmB,GADH,CACO,CACHnB,KAAK,CAACoB,GAAN,CAAU,kCAAV,CADG,EAEHpB,KAAK,CAACoB,GAAN,CAAU,wCAAV,CAFG,CADP,EAOGC,IAPH,CAOQC,WAAW,IAAI;AACnBd,MAAAA,SAAS,CAACc,WAAW,CAAC,CAAD,CAAX,CAAeC,IAAhB,CAAT;AACAb,MAAAA,UAAU,CAACY,WAAW,CAAC,CAAD,CAAX,CAAeC,IAAhB,CAAV;AACD,KAVH,EAWGC,KAXH,CAWSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,QAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACvB,MAAM,CAACwB,OAAR,CAAjB,CAAb;AACA,QAAMC,WAAW,GAAGJ,IAAI,CAACK,QAAL,EAApB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAE7B,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AA8BD;;AAED,eAAeE,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nimport Form from 'react-bootstrap/Form'\nimport Columned from 'react-columned';\nimport NavBar from './components/NavBar';\nimport SummaryCard from './components/SummaryCard'\nimport CountryList from './components/CountryList'\n\n\nfunction App() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setsearchCountries] = useState(\"\");\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item;\n  })\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://corona.lmao.ninja/v2/all\"),\n        axios.get(\"https://corona.lmao.ninja/v2/countries\")\n\n      ])\n\n      .then(responseArr => {\n        setLatest(responseArr[0].data);\n        setResults(responseArr[1].data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  return (\n    <div>\n      <Router>\n\n\n\n        <NavBar />\n        <Route path='/home' component={SummaryCard}></Route>\n        {/* <Route exact path={'/new'} component={CountryList}></Route> */}\n\n        {/* <CardDeck>\n          <SummaryCard title=\"Total Cases\" bg=\"secondary\" lastUpdated={lastUpdated} total={latest.cases} />\n          <SummaryCard title=\"Deaths\" bg=\"danger\" lastUpdated={lastUpdated} total={latest.deaths} />\n          <SummaryCard title=\"Recovered\" bg=\"success\" lastUpdated={lastUpdated} total={latest.recovered} />\n        </CardDeck>\n\n        <Form>\n          <Form.Group controlId=\"formGroupSearch\">\n            <Form.Label>Search Country</Form.Label>\n            <Form.Control type=\"text\"\n              placeholder=\"Enter Country name\"\n              onChange={e => setsearchCountries(e.target.value)} />\n          </Form.Group>\n        </Form> */}\n\n        {/* <CountryList countries={filterCountries} /> */}\n\n      </Router>\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}