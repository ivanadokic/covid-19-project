{"ast":null,"code":"var _jsxFileName = \"/Users/ivana/Desktop/online_projects/covid-19/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Columned from 'react-columned';\nimport NavBar from './components/NavBar';\nimport SummaryCard from './components/SummaryCard';\n\nfunction CountryCard(data) {\n  return /*#__PURE__*/React.createElement(Card, {\n    bg: \"light\",\n    text: \"dark\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: data.countryInfo.flag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, data.country), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Cases \", data.cases), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Recovered \", data.recovered), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Active \", data.active), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Critical \", data.critical), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Tests \", data.tests), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Today's cases \", data.todayCases), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Today's deaths \", data.todayDeaths), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Population \", data.population)));\n}\n\nfunction CountryList(props) {\n  const countries = props.countries.map((data, i) => {\n    return /*#__PURE__*/React.createElement(CountryCard, Object.assign({\n      key: i\n    }, data, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Columned, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, countries);\n}\n\nfunction App() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setsearchCountries] = useState(\"\");\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item;\n  });\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }];\n  useEffect(() => {\n    axios.all([axios.get(\"https://corona.lmao.ninja/v2/all\"), axios.get(\"https://corona.lmao.ninja/v2/countries\")]).then(responseArr => {\n      setLatest(responseArr[0].data);\n      setResults(responseArr[1].data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SummaryCard, {\n    title: \"Cases\",\n    bg: \"secondary\",\n    lastUpdated: lastUpdated,\n    total: latest.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SummaryCard, {\n    title: \"Deaths\",\n    bg: \"danger\",\n    lastUpdated: lastUpdated,\n    total: latest.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SummaryCard, {\n    title: \"Recovered\",\n    bg: \"success\",\n    lastUpdated: lastUpdated,\n    total: latest.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGroupSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Search Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Country name\",\n    onChange: e => setsearchCountries(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CountryList, {\n    countries: filterCountries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivana/Desktop/online_projects/covid-19/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Link","Switch","Card","CardDeck","axios","Form","Columned","NavBar","SummaryCard","CountryCard","data","margin","countryInfo","flag","country","cases","recovered","active","critical","tests","todayCases","todayDeaths","population","CountryList","props","countries","map","i","App","latest","setLatest","results","setResults","searchCountries","setsearchCountries","filterCountries","filter","item","toLowerCase","includes","queries","columns","query","all","get","then","responseArr","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString","deaths","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nimport Form from 'react-bootstrap/Form'\nimport Columned from 'react-columned';\nimport NavBar from './components/NavBar';\nimport SummaryCard from './components/SummaryCard'\n\n\nfunction CountryCard(data) {\n  return (<Card\n    bg=\"light\"\n    text=\"dark\"\n    className=\"text-center\"\n    style={{ margin: \"10px\" }}\n  >\n\n    <Card.Img variant=\"top\" src={data.countryInfo.flag} />\n    <Card.Body>\n      <Card.Title>{data.country}</Card.Title>\n      <Card.Text>Cases {data.cases}</Card.Text>\n\n      <Card.Text>Recovered {data.recovered}</Card.Text>\n      <Card.Text>Active {data.active}</Card.Text>\n      <Card.Text>Critical {data.critical}</Card.Text>\n      <Card.Text>Tests {data.tests}</Card.Text>\n      <Card.Text>Today's cases {data.todayCases}</Card.Text>\n      <Card.Text>Today's deaths {data.todayDeaths}</Card.Text>\n      <Card.Text>Population {data.population}</Card.Text>\n    </Card.Body>\n  </Card>)\n}\n\nfunction CountryList(props) {\n  const countries = props.countries.map((data, i) => {\n    return (\n      <CountryCard\n        key={i}\n        {...data}\n      />\n    );\n  });\n  return (\n    <Columned >{countries}</Columned>\n  )\n}\n\nfunction App() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  const [searchCountries, setsearchCountries] = useState(\"\");\n  const filterCountries = results.filter(item => {\n    return searchCountries !== \"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase()) : item;\n  })\n\n\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 500px'\n  }, {\n    columns: 3,\n    query: 'min-width: 1000px'\n  }];\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://corona.lmao.ninja/v2/all\"),\n        axios.get(\"https://corona.lmao.ninja/v2/countries\")\n\n      ])\n\n      .then(responseArr => {\n        setLatest(responseArr[0].data);\n        setResults(responseArr[1].data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  return (\n    <div>\n\n      <Switch>\n        <CardDeck>\n          <NavBar />\n          <SummaryCard title=\"Cases\" bg=\"secondary\" lastUpdated={lastUpdated} total={latest.cases} />\n          <SummaryCard title=\"Deaths\" bg=\"danger\" lastUpdated={lastUpdated} total={latest.deaths} />\n          <SummaryCard title=\"Recovered\" bg=\"success\" lastUpdated={lastUpdated} total={latest.recovered} />\n        </CardDeck>\n\n        <Form>\n          <Form.Group controlId=\"formGroupSearch\">\n            <Form.Label>Search Country</Form.Label>\n            <Form.Control type=\"text\"\n              placeholder=\"Enter Country name\"\n              onChange={e => setsearchCountries(e.target.value)} />\n          </Form.Group>\n        </Form>\n\n\n\n        <CountryList countries={filterCountries} />\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}