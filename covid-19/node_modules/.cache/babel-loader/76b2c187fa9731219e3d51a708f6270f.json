{"ast":null,"code":"var mediaQueries = {};\nexport function mediaQuery() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$query = _ref.query,\n      query = _ref$query === undefined ? '' : _ref$query,\n      _ref$full = _ref.full,\n      full = _ref$full === undefined ? false : _ref$full,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === undefined ? function () {} : _ref$onChange;\n\n  var result = {\n    query: query,\n    full: full,\n    queryMatches: false,\n    _mq: null\n  };\n\n  if (!query) {\n    return result;\n  }\n\n  function listener(mq) {\n    result.queryMatches = mq.matches;\n    onChange(result.queryMatches);\n  }\n\n  function removeListener() {\n    result._mq.removeListener(listener);\n  }\n\n  result.query = !full && query[query.length - 1] !== ')' ? '(' + query + ')' : query;\n\n  if (!mediaQueries[result.query]) {\n    mediaQueries[result.query] = window.matchMedia(result.query);\n  }\n\n  result._mq = mediaQueries[result.query];\n  result.queryMatches = result._mq.matches;\n  result.removeListener = removeListener;\n\n  result._mq.addListener(listener);\n\n  return result;\n}\nexport function mediaQueryMapper() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$queries = _ref2.queries,\n      queries = _ref2$queries === undefined ? [] : _ref2$queries,\n      _ref2$valueKey = _ref2.valueKey,\n      valueKey = _ref2$valueKey === undefined ? 'value' : _ref2$valueKey,\n      _ref2$defaultValue = _ref2.defaultValue,\n      defaultValue = _ref2$defaultValue === undefined ? '' : _ref2$defaultValue,\n      _ref2$onChange = _ref2.onChange,\n      onChange = _ref2$onChange === undefined ? function () {} : _ref2$onChange;\n\n  var mQs = queries.map(function (query) {\n    return mediaQuery({\n      query: query.query,\n      full: query.full,\n      onChange: onMqChange\n    });\n  });\n\n  function getValue() {\n    var value = defaultValue;\n    mQs.forEach(function (mQ, i) {\n      if (mQ.queryMatches) {\n        value = queries[i][valueKey];\n      }\n    });\n    return value;\n  }\n\n  function onMqChange(mq) {\n    onChange(getValue());\n  }\n\n  function removeListeners() {\n    mQs.forEach(function (mq, i) {\n      mq.removeListener();\n    });\n  }\n\n  return {\n    getValue: getValue,\n    removeListeners: removeListeners\n  };\n}","map":{"version":3,"sources":["/Users/ivana/Desktop/online_projects/covid-19/node_modules/react-columns/es/mq.js"],"names":["mediaQueries","mediaQuery","_ref","arguments","length","undefined","_ref$query","query","_ref$full","full","_ref$onChange","onChange","result","queryMatches","_mq","listener","mq","matches","removeListener","window","matchMedia","addListener","mediaQueryMapper","_ref2","_ref2$queries","queries","_ref2$valueKey","valueKey","_ref2$defaultValue","defaultValue","_ref2$onChange","mQs","map","onMqChange","getValue","value","forEach","mQ","i","removeListeners"],"mappings":"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","sourcesContent":["var mediaQueries = {};\n\nexport function mediaQuery() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$query = _ref.query,\n      query = _ref$query === undefined ? '' : _ref$query,\n      _ref$full = _ref.full,\n      full = _ref$full === undefined ? false : _ref$full,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === undefined ? function () {} : _ref$onChange;\n\n  var result = {\n    query: query,\n    full: full,\n    queryMatches: false,\n    _mq: null\n  };\n  if (!query) {\n    return result;\n  }\n\n  function listener(mq) {\n    result.queryMatches = mq.matches;\n    onChange(result.queryMatches);\n  }\n  function removeListener() {\n    result._mq.removeListener(listener);\n  }\n\n  result.query = !full && query[query.length - 1] !== ')' ? '(' + query + ')' : query;\n\n  if (!mediaQueries[result.query]) {\n    mediaQueries[result.query] = window.matchMedia(result.query);\n  }\n  result._mq = mediaQueries[result.query];\n  result.queryMatches = result._mq.matches;\n  result.removeListener = removeListener;\n\n  result._mq.addListener(listener);\n\n  return result;\n}\n\nexport function mediaQueryMapper() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$queries = _ref2.queries,\n      queries = _ref2$queries === undefined ? [] : _ref2$queries,\n      _ref2$valueKey = _ref2.valueKey,\n      valueKey = _ref2$valueKey === undefined ? 'value' : _ref2$valueKey,\n      _ref2$defaultValue = _ref2.defaultValue,\n      defaultValue = _ref2$defaultValue === undefined ? '' : _ref2$defaultValue,\n      _ref2$onChange = _ref2.onChange,\n      onChange = _ref2$onChange === undefined ? function () {} : _ref2$onChange;\n\n  var mQs = queries.map(function (query) {\n    return mediaQuery({\n      query: query.query,\n      full: query.full,\n      onChange: onMqChange\n    });\n  });\n\n  function getValue() {\n    var value = defaultValue;\n    mQs.forEach(function (mQ, i) {\n      if (mQ.queryMatches) {\n        value = queries[i][valueKey];\n      }\n    });\n    return value;\n  }\n\n  function onMqChange(mq) {\n    onChange(getValue());\n  }\n\n  function removeListeners() {\n    mQs.forEach(function (mq, i) {\n      mq.removeListener();\n    });\n  }\n\n  return { getValue: getValue, removeListeners: removeListeners };\n}"]},"metadata":{},"sourceType":"module"}