{"version":3,"sources":["../../src/utils/getColumnsCount.js"],"names":["getColumnsCount","params","width","parseInt","sortedWidths","Object","keys","sort","a","b","i","length","current"],"mappings":";;;;;;;AAEe,SAASA,eAAT,CACXC,MADW,EAEXC,KAFW,EAGL;AACN,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAOE,QAAQ,CAACF,MAAD,CAAf;AACH;;AAED,MAAMG,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,IAApB,CAAyB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzD,WAAON,QAAQ,CAACK,CAAD,CAAR,GAAcL,QAAQ,CAACM,CAAD,CAA7B;AACH,GAFoB,CAArB;;AAIA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACO,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,QAAME,OAAO,GAAGR,YAAY,CAACM,CAAD,CAA5B;;AACA,QAAIR,KAAK,IAAIC,QAAQ,CAACS,OAAD,CAArB,EAAgC;AAC5B,aAAOX,MAAM,CAACW,OAAD,CAAb;AACH;AACJ,GAdK,CAgBN;;;AACA,SAAOX,MAAM,CAACG,YAAY,CAACA,YAAY,CAACO,MAAb,GAAsB,CAAvB,CAAb,CAAb;AACH","sourcesContent":["// @flow\n\nexport default function getColumnsCount(\n    params: number | { [string]: number },\n    width: number\n): number {\n    if (typeof params === \"number\") {\n        return parseInt(params);\n    }\n\n    const sortedWidths = Object.keys(params).sort(function(a, b) {\n        return parseInt(a) - parseInt(b);\n    });\n\n    for (let i = 0; i < sortedWidths.length; i++) {\n        const current = sortedWidths[i];\n        if (width <= parseInt(current)) {\n            return params[current];\n        }\n    }\n\n    // Return last.\n    return params[sortedWidths[sortedWidths.length - 1]];\n}\n"],"file":"getColumnsCount.js"}